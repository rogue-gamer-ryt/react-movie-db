{"version":3,"sources":["modules/common/helper.redux.js","modules/movie-page/movie-page.services.js","modules/movie-page/movie-page.actions.js","modules/movie-page/movie-page.helper.js","modules/movie-page/movie-modal/movie-modal.action.js","modules/movie-page/movie-card/movie-card.component.js","modules/common/loader.component.js","modules/movie-page/movie-list/movie-list.component.js","modules/movie-page/movie-modal/movie-modal.container.js","modules/movie-page/movie-page.container.js","modules/common/scroll.helper.js","App.js","serviceWorker.js","modules/movie-page/movie-modal/movie-modal.reducer.js","modules/movie-page/movie-page.reducer.js","store.js","index.js"],"names":["createReducer","initialState","arguments","length","undefined","actionHandlerKeyFuncs","state","action","actionHandler","type","createAction","actionProps","Object","objectSpread","createAsyncActionCreator","actionType","asyncRequestFn","requestParams","dispatch","concat","request","then","response","json","catch","error","initialAsyncState","isLoading","createAsyncReducer","_objectSpread2","defineProperty","createMovieDbUrl","relativeUrl","queryParams","baseUrl","keys","forEach","paramName","getTopMovies","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","_ref","page","fullUrl","wrap","_context","prev","next","abrupt","fetch","stop","_x","apply","this","searchMovies","_ref4","_callee2","_ref3","query","_context2","_x2","getMovieDetails","_ref6","_callee3","_ref5","movieId","_context3","_x3","GET_TOP_MOVIES","SEARCH_MOVIES","GET_MOVIE_DETAILS","movieService","TMDB_IMAGE_BASE_URL","width","updateMoviePictureUrls","movieResult","backdrop_path","poster_path","styles","cardTitle","whiteSpace","textOverflow","overflow","cardMedia","maxHeight","card","cursor","height","bgImage","MovieCardComponent","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isMouseOver","_this2","_this$props","movie","openMovieModal","subtitle","overview","react_default","createElement","index_es","style","onMouseOver","setState","onMouseLeave","onClick","id","overlay","title","src","React","Component","connect","refreshStyle","position","display","margin","LoaderComponent","children","top","left","size","status","movieColumn","marginBottom","MovieListComponent","movies","movieColumns","map","Col","key","xs","sm","md","lg","movie_card_component","Row","loader_component","backgroundUrl","backgroundImage","backgroundRepeat","backgroundSize","minHeight","color","padding","MovieModalContainer","nextProps","isOpen","closeMovieModal","movieHelpers","genres","genre","name","join","autoScrollBodyContent","modal","open","onRequestClose","popularity","budget","_","get","MovieBrowser","currentPage","handleScroll","bind","assertThisInitialized","window","onscroll","removeEventListener","topMovies","pageHeight","document","documentElement","scrollHeight","clientHeight","pageYOffset","scrollHelpers","nextPage","moviesResponse","toConsumableArray","results","Container","movie_list_component","movie_modal_container","movieBrowser","movieActions","App","MuiThemeProvider_default","movie_page_container","Boolean","location","hostname","match","movieModalReducer","_createReducer","moviesSuccessReducer","existingMovies","movieBrowserReducer","combineReducers","movieModal","movieActionKeys","movieSearch","movieDetails","rootReducer","loggerMiddleware","createLogger","store","createStore","compose","applyMiddleware","thunkMiddlware","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.817b1eb3.chunk.js","sourcesContent":["export const createReducer = (\r\n  initialState = {},\r\n  actionHandlerKeyFuncs = {}\r\n) => {\r\n  return (state = initialState, action) => {\r\n    const actionHandler = actionHandlerKeyFuncs[action.type];\r\n    return actionHandler ? actionHandler(state, action) : state;\r\n  };\r\n};\r\n\r\n// Creates a basic action\r\nconst createAction = (type, actionProps) => {\r\n  return {\r\n    type,\r\n    ...actionProps\r\n  };\r\n};\r\n\r\nexport const createAsyncActionCreator = (\r\n  actionType,\r\n  asyncRequestFn,\r\n  requestParams\r\n) => {\r\n  return dispatch => {\r\n    dispatch(createAction(`${actionType}_START`, { request: requestParams }));\r\n    // NOTE: asyncRequestFn must accept single object parameter\r\n    // in order to resolve param values\r\n    return asyncRequestFn(requestParams).then(response => {\r\n      response\r\n        .json()\r\n        .then(json =>\r\n          dispatch(createAction(`${actionType}_SUCCESS`, { response: json }))\r\n        )\r\n        .catch(error =>\r\n          dispatch(createAction(`${actionType}_ERROR`, { error }))\r\n        );\r\n    });\r\n  };\r\n};\r\n\r\n// We're setting these based on the state of the request\r\nconst initialAsyncState = { isLoading: false, response: null, request: null };\r\n\r\n// Generic way of handling state changes for an async request\r\n// Can override {action_type}_START, {action_type}_SUCCESS, {action_type}_ERROR\r\nexport const createAsyncReducer = (\r\n  actionType,\r\n  actionHandlerKeyFuncs = {},\r\n  initialState = initialAsyncState\r\n) => {\r\n  const startReducerFn = (state, action) => ({\r\n    ...state,\r\n    isLoading: true,\r\n    request: action.request\r\n  });\r\n\r\n  const successReducerFn = (state, action) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    response: action.response\r\n  });\r\n  const errorReducerFn = (state, action) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    error: action.error\r\n  });\r\n\r\n  return createReducer(initialState, {\r\n    [`${actionType}_START`]: startReducerFn,\r\n    [`${actionType}_SUCCESS`]: successReducerFn,\r\n    [`${actionType}_ERROR`]: errorReducerFn,\r\n    ...actionHandlerKeyFuncs\r\n  });\r\n};\r\n","const MOVIE_DB_API_KEY = \"c974563e1138de20ae7ecd4d444b1545\";\r\nconst MOVIE_DB_BASE_URL = \"https://api.themoviedb.org/3\";\r\n\r\nconst createMovieDbUrl = (relativeUrl, queryParams) => {\r\n  let baseUrl = `${MOVIE_DB_BASE_URL}${relativeUrl}?api_key=${MOVIE_DB_API_KEY}&language=en-US`;\r\n  if (queryParams) {\r\n    Object.keys(queryParams).forEach(\r\n      paramName => (baseUrl += `&${paramName}=${queryParams[paramName]}`)\r\n    );\r\n  }\r\n  return baseUrl;\r\n};\r\n\r\nexport const getTopMovies = async ({ page }) => {\r\n  const fullUrl = createMovieDbUrl(\"/movie/top_rated\", {\r\n    page\r\n  });\r\n  return fetch(fullUrl);\r\n};\r\n\r\nexport const searchMovies = async ({ page, query }) => {\r\n  const fullUrl = createMovieDbUrl(\"/search/movie\", {\r\n    page,\r\n    query\r\n  });\r\n  return fetch(fullUrl);\r\n};\r\n\r\nexport const getMovieDetails = async ({ movieId }) => {\r\n  const fullUrl = createMovieDbUrl(`/movie/${movieId}`);\r\n  return fetch(fullUrl);\r\n};\r\n","import { createAsyncActionCreator } from \"../common/helper.redux\";\r\nimport * as movieService from \"./movie-page.services\";\r\n\r\nexport const keys = {\r\n  GET_TOP_MOVIES: \"GET_TOP_MOVIES\",\r\n  SEARCH_MOVIES: \"SEARCH_MOVIES\",\r\n  GET_MOVIE_DETAILS: \"GET_MOVIE_DETAILS\"\r\n};\r\n\r\nexport const getTopMovies = page =>\r\n  createAsyncActionCreator(\r\n    // actionType\r\n    keys.GET_TOP_MOVIES,\r\n    // requestFn\r\n    movieService.getTopMovies,\r\n    // requestParams\r\n    { page }\r\n  );\r\n\r\nexport const searchMovies = (query, page) =>\r\n  createAsyncActionCreator(keys.SEARCH_MOVIES, movieService.searchMovies, {\r\n    query,\r\n    page\r\n  });\r\n\r\nexport const getMovieDetails = movieId =>\r\n  createAsyncActionCreator(\r\n    keys.GET_MOVIE_DETAILS,\r\n    movieService.getMovieDetails,\r\n    { movieId }\r\n  );\r\n","const TMDB_IMAGE_BASE_URL = (width = 300) =>\r\n  `https://image.tmdb.org/t/p/w${width}`;\r\n\r\nexport const updateMoviePictureUrls = (movieResult, width = 300) => {\r\n  if (movieResult) {\r\n    return {\r\n      ...movieResult,\r\n      backdrop_path: `${TMDB_IMAGE_BASE_URL(width)}${\r\n        movieResult.backdrop_path\r\n      }`,\r\n      poster_path: `${TMDB_IMAGE_BASE_URL(width)}${movieResult.poster_path}`\r\n    };\r\n  }\r\n  return {};\r\n};\r\n\r\nexport const getMoviesList = moviesResponse => {\r\n  return !!moviesResponse\r\n    ? [\r\n        ...moviesResponse.results.map(movieResult =>\r\n          updateMoviePictureUrls(movieResult)\r\n        )\r\n      ]\r\n    : null;\r\n};\r\n","// List of movie modal action type keys\r\nexport const keys = {\r\n  OPEN_MOVIE_MODAL: \"OPEN_MOVIE_MODAL\",\r\n  CLOSE_MOVIE_MODAL: \"CLOSE_MOVIE_MODAL\"\r\n};\r\n\r\n// Opens the <MovieModal /> with a movieId\r\nexport const openMovieModal = movieId => {\r\n  return {\r\n    type: keys.OPEN_MOVIE_MODAL,\r\n    movieId\r\n  };\r\n};\r\n\r\n// Closes the <MovieModal />\r\nexport const closeMovieModal = () => {\r\n  return {\r\n    type: keys.CLOSE_MOVIE_MODAL\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card, CardTitle, CardMedia } from \"material-ui\";\r\nimport { openMovieModal } from \"../movie-modal/movie-modal.action\";\r\n\r\n// These are inline styles\r\n// You can pass styles as objects using this convention\r\nconst styles = {\r\n  cardTitle: {\r\n    whiteSpace: \"nowrap\",\r\n    textOverflow: \"ellipsis\",\r\n    overflow: \"hidden\"\r\n  },\r\n  cardMedia: {\r\n    maxHeight: 394,\r\n    overflow: \"hidden\"\r\n  },\r\n  card: {\r\n    cursor: \"pointer\",\r\n    height: 400,\r\n    overflow: \"hidden\"\r\n  },\r\n  bgImage: {\r\n    width: \"100%\"\r\n  }\r\n};\r\n\r\nclass MovieCardComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // Track if the mouse hovering over the movie card\r\n    this.state = {\r\n      isMouseOver: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { movie, openMovieModal } = this.props;\r\n    // The subtitle won't render if it's null\r\n    const subtitle = this.state.isMouseOver ? movie.overview : null;\r\n\r\n    return (\r\n      <Card\r\n        style={styles.card}\r\n        onMouseOver={() => this.setState({ isMouseOver: true })}\r\n        onMouseLeave={() => this.setState({ isMouseOver: false })}\r\n        onClick={() => openMovieModal(movie.id)}\r\n      >\r\n        {/* <CardTitle title={<div style={styles.cardTitle}>{movie.title}</div>} /> */}\r\n        <CardMedia\r\n          style={styles.cardMedia}\r\n          overlay={<CardTitle title={movie.title} subtitle={subtitle} />}\r\n        >\r\n          <img style={styles.bgImage} src={movie.poster_path} />\r\n        </CardMedia>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  () => ({}),\r\n  { openMovieModal }\r\n)(MovieCardComponent);\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { RefreshIndicator } from \"material-ui\";\r\n\r\nconst styles = {\r\n  refreshStyle: {\r\n    position: \"relative\",\r\n    display: \"block\",\r\n    margin: \"0 auto\"\r\n  }\r\n};\r\n\r\nconst LoaderComponent = ({ isLoading, children }) => {\r\n  if (isLoading) {\r\n    return (\r\n      <RefreshIndicator\r\n        style={styles.refreshStyle}\r\n        top={0}\r\n        left={0}\r\n        size={80}\r\n        status={\"loading\"}\r\n      />\r\n    );\r\n  }\r\n  // Render nothing if no children present\r\n  return children ? children : null;\r\n};\r\n\r\nexport default LoaderComponent;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport MovieCard from \"../movie-card/movie-card.component\";\r\nimport LoaderComponent from \"../../common/loader.component\";\r\n\r\nconst styles = {\r\n  movieColumn: {\r\n    marginBottom: 20\r\n  }\r\n};\r\nconst MovieListComponent = ({ movies, isLoading }) => {\r\n  const movieColumns = movies\r\n    ? movies.map(movie => (\r\n        <Col\r\n          style={styles.movieColumn}\r\n          key={movie.id}\r\n          xs={12}\r\n          sm={4}\r\n          md={3}\r\n          lg={3}\r\n        >\r\n          <MovieCard movie={movie} />\r\n        </Col>\r\n      ))\r\n    : null;\r\n\r\n  return (\r\n    <Row>\r\n      {movieColumns}\r\n      <LoaderComponent isLoading={isLoading} />\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default MovieListComponent;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dialog } from \"material-ui\";\r\nimport _ from \"lodash\";\r\nimport { closeMovieModal } from \"./movie-modal.action\";\r\nimport { getMovieDetails } from \"../movie-page.actions\";\r\nimport * as movieHelpers from \"../movie-page.helper\";\r\nimport Loader from \"../../common/loader.component\";\r\n\r\nconst styles = {\r\n  // Can use functions to dynamically build our CSS\r\n  dialogContent: backgroundUrl => ({\r\n    backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url(${backgroundUrl})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"100%\",\r\n    height: \"100%\",\r\n    minHeight: 400,\r\n    color: \"white\",\r\n    padding: 10\r\n  })\r\n};\r\n\r\nclass MovieModalContainer extends React.Component {\r\n  // Triggered right after a property is changed\r\n  componentWillReceiveProps(nextProps) {\r\n    // If we will receive a new movieId\r\n    if (nextProps.movieId && this.props.movieId !== nextProps.movieId) {\r\n      nextProps.getMovieDetails(nextProps.movieId);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isOpen, closeMovieModal, isLoading } = this.props;\r\n    const loadingStatus = isLoading ? \"loading\" : \"hide\";\r\n    const movie = movieHelpers.updateMoviePictureUrls(this.props.movie);\r\n    const genres =\r\n      movie && movie.genres\r\n        ? movie.genres.map(genre => genre.name).join(\", \")\r\n        : \"\";\r\n\r\n    return (\r\n      <Dialog\r\n        autoScrollBodyContent={true}\r\n        title={null}\r\n        modal={false}\r\n        open={isOpen}\r\n        onRequestClose={closeMovieModal}\r\n      >\r\n        <Loader isLoading={isLoading}>\r\n          <div style={styles.dialogContent(movie.backdrop_path)}>\r\n            <h1>{movie.title}</h1>\r\n            <h5>{genres}</h5>\r\n            <p>{movie.overview}</p>\r\n            <p>Popularity: {movie.popularity}</p>\r\n            <p>Budget: ${movie.budget}</p>\r\n          </div>\r\n        </Loader>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n// \"connect\" our movie modal to the component store\r\nexport default connect(\r\n  // Map nodes in our state to a properties of our component\r\n  state => ({\r\n    // Using lodash get, recursively check that a property is defined\r\n    // before try to access it - if it is undefined, it will return your default value\r\n    // _.get(object, 'path.to.targets[0].neat.stuff', defaultValue)\r\n    isOpen: _.get(state, \"movieBrowser.movieModal.isOpen\", false),\r\n    movieId: _.get(state, \"movieBrowser.movieModal.movieId\"),\r\n    movie: _.get(state, \"movieBrowser.movieDetails.response\", {}),\r\n    isLoading: _.get(state, \"movieBrowser.movieDetails.isLoading\", false)\r\n  }),\r\n  // Map an action to a prop, ready to be dispatched\r\n  { closeMovieModal, getMovieDetails }\r\n)(MovieModalContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { AppBar } from \"material-ui\";\r\n// e.g. { getTopMovies, ... }\r\nimport * as movieActions from \"./movie-page.actions\";\r\nimport * as movieHelpers from \"./movie-page.helper\";\r\nimport MovieList from \"./movie-list/movie-list.component\";\r\nimport * as scrollHelpers from \"../common/scroll.helper\";\r\nimport MovieModal from \"./movie-modal/movie-modal.container\";\r\n\r\nclass MovieBrowser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPage: 1\r\n    };\r\n    // Binds the handleScroll to this class (MovieBrowser)\r\n    // which provides access to MovieBrowser's props\r\n    // Note: You don't have to do this if you call a method\r\n    // directly from a lifecycle method or define an arrow function\r\n    this.handleScroll = this.handleScroll.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.onscroll = this.handleScroll;\r\n    this.props.getTopMovies(this.state.currentPage);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n\r\n  handleScroll() {\r\n    const { topMovies } = this.props;\r\n    if (!topMovies.isLoading) {\r\n      let percentageScrolled = scrollHelpers.getScrollDownPercentage(window);\r\n      if (percentageScrolled > 0.8) {\r\n        const nextPage = this.state.currentPage + 1;\r\n        this.props.getTopMovies(nextPage);\r\n        this.setState({ currentPage: nextPage });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topMovies } = this.props;\r\n    const movies = movieHelpers.getMoviesList(topMovies.response);\r\n\r\n    return (\r\n      <div>\r\n        <AppBar title=\"Movie Browser\" />\r\n        <Container>\r\n          <Row>\r\n            <p>Top Movies</p>\r\n          </Row>\r\n          <Row>\r\n            <MovieList movies={movies} isLoading={topMovies.isLoading} />\r\n          </Row>\r\n        </Container>\r\n        <MovieModal />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  // Map nodes in our state to a properties of our component\r\n  state => ({\r\n    topMovies: state.movieBrowser.topMovies\r\n  }),\r\n  // Map action creators to properties of our component\r\n  { ...movieActions }\r\n)(MovieBrowser);\r\n","export const getScrollDownPercentage = window => {\r\n  const pageHeight = window.document.documentElement.scrollHeight;\r\n  const clientHeight = window.document.documentElement.clientHeight;\r\n  const scrollPos = window.pageYOffset;\r\n  const currentPosition = scrollPos + clientHeight;\r\n  const percentageScrolled = currentPosition / pageHeight;\r\n  return percentageScrolled;\r\n};\r\n","import React, { Component } from \"react\";\nimport MovieBrowser from \"./modules/movie-page/movie-page.container\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\n\nclass App extends Component {\n  render() {\n    return (\n      // Provides the Material UI theme to child components\n      <MuiThemeProvider>\n        <MovieBrowser />\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { keys } from \"./movie-modal.action\";\r\nimport { createReducer } from \"../../common/helper.redux\";\r\n\r\n// Placeholder reducer for our movie modal\r\nconst movieModalReducer = createReducer(\r\n  { isOpen: false, movieId: undefined },\r\n  {\r\n    [keys.OPEN_MOVIE_MODAL]: (state, action) => ({\r\n      isOpen: true,\r\n      movieId: action.movieId\r\n    }),\r\n    [keys.CLOSE_MOVIE_MODAL]: (state, action) => ({\r\n      // Persist the movieId (and any other state tree objects)\r\n      ...state,\r\n      isOpen: false\r\n    })\r\n  }\r\n);\r\n\r\nexport default movieModalReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer, createAsyncReducer } from \"../common/helper.redux\";\r\nimport { keys as movieActionKeys } from \"./movie-page.actions\";\r\nimport movieModalReducer from \"./movie-modal/movie-modal.reducer\";\r\n\r\n// This will create a new state with both the existing\r\n// movies and new pages of movies\r\nconst moviesSuccessReducer = (state, action) => {\r\n  const existingMovies = state.response ? state.response.results : [];\r\n  // Create a new state object to be returned\r\n  // When creating the new state, be sure to include any\r\n  // existing properties we want to persist\r\n  return {\r\n    ...state,\r\n    isLoading: false,\r\n    response: {\r\n      ...action.response,\r\n      results: [...existingMovies, ...action.response.results]\r\n    }\r\n  };\r\n};\r\n\r\n// Combines our movie browser related reducers to build our movieBrowser reducer\r\nconst movieBrowserReducer = combineReducers({\r\n  movieModal: movieModalReducer,\r\n  topMovies: createAsyncReducer(movieActionKeys.GET_TOP_MOVIES, {\r\n    [`${movieActionKeys.GET_TOP_MOVIES}_SUCCESS`]: moviesSuccessReducer\r\n  }),\r\n  movieSearch: createAsyncReducer(movieActionKeys.SEARCH_MOVIES, {\r\n    [`${movieActionKeys.SEARCH_MOVIES}_SUCCESS`]: moviesSuccessReducer\r\n  }),\r\n  movieDetails: createAsyncReducer(movieActionKeys.GET_MOVIE_DETAILS)\r\n});\r\n\r\nexport default movieBrowserReducer;\r\n","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\r\nimport thunkMiddlware from \"redux-thunk\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport movieBrowserReducer from \"./modules/movie-page/movie-page.reducer\";\r\n\r\n// The root reducer will serve as the parent for all other reducers\r\n// We will add our module reducers to the root level here\r\nconst rootReducer = combineReducers({\r\n  movieBrowser: movieBrowserReducer\r\n});\r\n\r\n// Will log information about dispatched actions to the console\r\n// including the previous state, the action details, and the next state\r\nconst loggerMiddleware = createLogger();\r\n\r\nconst store = createStore(\r\n  // reducer\r\n  rootReducer,\r\n  // preloadedState\r\n  undefined,\r\n  // compose simply enables us to apply several store enhancers\r\n  // Right now, we are only using applyMiddlware, so this is\r\n  // just future-proofing our application\r\n  compose(\r\n    // Middlware can intercept dispatched actions before they reach the reducer\r\n    // in order to modify it in some way\r\n    applyMiddleware(\r\n      // Thunk allows functions to be returned from action creators\r\n      // so we can do things like dispatch multiple actions in a\r\n      // single action creator for async actions\r\n      thunkMiddlware,\r\n      // logger will output the previous state, next state, and\r\n      // the action details to the console\r\n      loggerMiddleware\r\n    )\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}